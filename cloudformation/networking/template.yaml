AWSTemplateFormatVersion: 2010-09-09

Description:

  This template provisions a VPC containing standard foundational networking components.

Parameters:

  VPCCidrBlock:
    Type: String
    Description: The primary IPv4 CIDR block for the VPC

  PublicSubnet1CidrBlock:
    Type: String
    Description: The IPv4 CIDR block assigned to public subnet 1

  PublicSubnet2CidrBlock:
    Type: String
    Description: The IPv4 CIDR block assigned to public subnet 2

  Subnet1AZ:
    Type: String
    Description: The Availability Zone of subnet 1

  Subnet2AZ:
    Type: String
    Description: The Availability Zone of subnet 2

  Env:
    Type: String
    Description: dev or prod

Resources:

  # VPC

  myVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCidrBlock
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default

      Tags:
        - Key: Name
          Value: !Sub "sq-${Env}-vpc"

  myInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "sq-${Env}-internet-gateway"

  myVPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref myVPC
      InternetGatewayId: !Ref myInternetGateway

  # Public Subnet 1

  myPublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: myVPC
      CidrBlock: !Ref PublicSubnet1CidrBlock
      AvailabilityZone: !Ref Subnet1AZ
      Tags:
        - Key: Name
          Value: !Sub "sq-${Env}-public-subnet-1"

  myPublicRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref myPublicSubnetRouteTable
      SubnetId: !Ref myPublicSubnet1

  # Public Subnet 2

  myPublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: myVPC
      CidrBlock: !Ref PublicSubnet2CidrBlock
      AvailabilityZone: !Ref Subnet2AZ
      Tags:
        - Key: Name
          Value: !Sub "sq-${Env}-public-subnet-2"

  myPublicRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref myPublicSubnetRouteTable
      SubnetId: !Ref myPublicSubnet2

  # Public Subnet Route

  myPublicSubnetRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref myVPC
      Tags:
        - Key: Name
          Value: !Sub "sq-${Env}-public-route-table"

  myPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: myVPCGatewayAttachment
    Properties:
      RouteTableId: !Ref myPublicSubnetRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref myInternetGateway

# Outputs

Outputs:

  Vpc:
    Description: Vpc
    Value: !Ref myVPC
    Export:
      Name: !Sub "${AWS::StackName}-vpc-id"

  PublicSubnet1:
    Description: Public Subnet 1
    Value: !Ref myPublicSubnet1
    Export:
      Name: !Sub "${AWS::StackName}-public-subnet-1-id"

  PublicSubnet2:
    Description: Public Subnet 2
    Value: !Ref myPublicSubnet2
    Export:
      Name: !Sub "${AWS::StackName}-public-subnet-2-id"
